ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
View(ci)
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
View(ci_data)
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Question 5 here, and Knit
qnorm(0.99)
49/50
z_star_99
# type your code for the Question 5 here, and Knit
z_star_99 <- qnorm(0.99) %>%
z_star_99
# type your code for the Question 5 here, and Knit
z_star_99 <- qnorm(0.995) %>%
z_star_99
z_star_95 <- qnorm(0.995)
# type your code for the Question 5 here, and Knit
z_star_99 <- qnorm(0.995)
ci  %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_99 <- ames  %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
View(ci_99)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_99 %>%
```slice(1:5)
ci_99 %>%
slice(1:5)
ci_99 %>%
slice(1:5)
ci_99 %>%
slice(1:5)
ci_99 %>%
slice(1:5)
ci_99 %>%
slice(1:5)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci_99 %>%
slice(1:5)
set.seed(19122018)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
set.seed(19122018);
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
set.seed(19122018);
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
set.seed(19122018);
ci %>%
slice(1:5)
set.seed(19122018);
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
set.seed(19122018);
ci %>%
slice(1:5)
set.seed(19122018)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
View(ci)
set.seed(19122018);
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
set.seed(19122018);
ci %>%
slice(1:5)
View(ci_data)
set.seed(19122018)
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
set.seed(19122018)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
set.seed(19122018)
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
View(ci_data)
set.seed(19122018)
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Question 5 here, and Knit
z_star_99 <- qnorm(0.995)
z_star_99
# type your code for the Question 5 here, and Knit
set.seed(19122018)
z_star_99 <- qnorm(0.995)
z_star_99
# type your code for the Question 5 here, and Knit
set.seed(19122018)
z_star_99 <- qnorm(0.995)
z_star_99
# type your code for the Question 5 here, and Knit
set.seed(19122018)
z_star_99 <- qnorm(0.995)
z_star_99
# type your code for the Question 5 here, and Knit
#set.seed(19122018)
z_star_99 <- qnorm(0.995)
z_star_99
# type your code for the Question 5 here, and Knit
#set.seed(19122018)
z_star_99 <- qnorm(0.995)
z_star_99
View(ci_99)
# type your code for the Exercise here, and Knit
set.seed(19122018)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci$lower, ci$upper),
capture_mu_99 = c(ci_99$capture_mu, ci_99$capture_mu))
# type your code for the Exercise here, and Knit
set.seed(19122018)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu, ci_99$capture_mu))
# type your code for the Exercise here, and Knit
set.seed(19122018)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu, ci_99$capture_mu))
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
View(ci_99)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu, ci_99$capture_mu))
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
set.seed(19122018)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu, ci_99$capture_mu))
View(params)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
set.seed(19122018)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
View(ci_data_99)
View(ci_data_99)
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 4) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 4) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
View(ci_data)
View(ci_data_99)
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
View(ci)
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
View(ci_99)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
View(ci_99)
?set.seed
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
View(ci_data_99)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
View(ci_data_99)
set.seed(19122018)
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
# type your code for the Exercise here, and Knit
set.seed(19122018)
#samples for 99% confidence interval
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
# ci_99 %>%
#   slice(1:5)
ci_99 <- ames  %>%
rep_sample_n(size = n ,reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
#assignment of capture
ci_99 <- ci_99 %>%
mutate(capture_mu_99 = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
#datagrame for plot
ci_data_99 <- data.frame(ci_id_99 = c(1:50, 1:50),
ci_bounds_99 = c(ci_99$lower, ci_99$upper),
capture_mu_99 = c(ci_99$capture_mu_99, ci_99$capture_mu_99))
#plot
ggplot(data = ci_data_99, aes(x = ci_bounds_99, y = ci_id_99,
group = ci_id_99, color = capture_mu_99)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkblue") # draw vertical line
View(ci_99)
View(ci)
