group_by(response) %>%
ath <- count(atheism == "atheist")
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n()/sum(n))
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n/sum(n))
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n()) %>%
summarise(perc = n/sum(n))
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n(),perc = n/sum(n))
perc <- n/sum(n)
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n()) %>%
perc <- n/sum(n)
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n()) %>%
mutate(perc = n/sum(n))
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
z_value <- qt(0.975)
z_value <- qnorm(0.975)
perc
# type your code for Question 8 here, and Knit
n <- 1002
z_value <- qnorm(0.975)
se <- sqrt(p-hat*(1-(p-hat))/n)
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
z_value <- qnorm(0.975)
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- z_Value*se
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
z_value <- qnorm(0.975)
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- z_Value*se
z_value
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
z_value <- qnorm(0.975)
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- z_Value*se
z_Value*se
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
z_value <- qnorm(0.975)
se <- sqrt(p_hat*(1-(p_hat))/n)
z_Value*se
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
se <- sqrt(p_hat*(1-(p_hat))/n)
qnorm(0.975)*se
#moe
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- qnorm(0.975)*se
moe
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
View(d)
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(atheism$nationality == "Spain" & atheism$year %in% c("2005", "2012"))
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality == "Spain" & atheism$year %in% c("2005", "2012"))
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality == "Spain", atheism$year %in% c("2005", "2012"))
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality == "Spain", atheism$year == c("2005", "2012"))
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality == "Spain", atheism$year == "2005"|atheism$year == "2012")
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality == "Spain", atheism$year == "2005", atheism$year == "2012")
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism
View(spain_05_12)
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism
filter(atheism$nationality == "Spain", atheism$year == "2005", atheism$year == "2012")
filter(atheism$nationality == "Spain", atheism$year == "2005")
filter(nationality == "Spain", atheism$year == "2005")
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality == "Spain", atheism$year == "2005")
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality == "Spain")
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain")
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(atheism$nationality == "Spain")
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(atheism$Nationality == "Spain")
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(Nationality == "Spain")
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain")
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain")
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n()) %>%
# Show percentage of each level within the categorical variable
mutate(perc = n/sum(n))
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- qnorm(0.975)*se
moe
# type your code for the Exercise here, and Knit
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain")
View(spain)
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year)
summarise(count = n())
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year) %>%
summarise(count = n())
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year) %>%
summarise(count = n())
View(spain)
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year)
View(spain)
inference(y = response, data = spain, statistic = "proportion", method = "theoretical", group_by(year), type = "ht", success = "atheist" )
inference(y = response, data = spain, statistic = "proportion", method = "theoretical", group_by(factor(year)), type = "ht", success = "atheist" )
inference(y = response, x = as.factor(year), data = spain, statistic = "proportion", method = "theoretical", type = "ht", success = "atheist", alternative = "twosided" )
?as.factor()
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year)
inference(y = response, x = as.factor(year), data = spain, statistic = "proportion", method = "theoretical", type = "ht", success = "atheist", alternative = "twosided", null = 0 )
# type your code for Question 11 here, and Knit
us <- atheism %>%
filter(nationality == "United States")
inference(y = response, data = us, x = as.factor(year), method = "theoretical", type = "ht", alternative = "twosided", null = 0, statistic = "proportion")
# type your code for Question 11 here, and Knit
us <- atheism %>%
filter(nationality == "United States")
inference(y = response, data = us, x = as.factor(year), method = "theoretical", type = "ht", alternative = "twosided", null = 0, statistic = "proportion", success = "atheist")
Type_1_error
# type your code for Question 12 here, and Knit
sig_level = 0.05
nt4 = 39
Type_1_error <- sig_level * nt4
Type_1_error
# type your code for Question 13 here, and Knit
p <- 0.5
n_sample <- z_value^2 * p*(1-p)/0.01^2
n_sample
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n()) %>%
# Show percentage of each level within the categorical variable
mutate(perc = n/sum(n))
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- qnorm(0.975)*se
moe
# type your code for the Exercise here, and Knit
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year)
inference(y = response, x = as.factor(year), data = spain, statistic = "proportion", method = "theoretical", type = "ht", success = "atheist", alternative = "twosided", null = 0 )
# type your code for Question 11 here, and Knit
us <- atheism %>%
filter(nationality == "United States")
inference(y = response, data = us, x = as.factor(year), method = "theoretical", type = "ht", alternative = "twosided", null = 0, statistic = "proportion", success = "atheist")
# type your code for Question 12 here, and Knit
sig_level = 0.05
nt4 = 39
Type_1_error <- sig_level * nt4
Type_1_error
# type your code for Question 13 here, and Knit
p <- 0.5
n_sample <- z_value^2 * p*(1-p)/0.01^2
n_sample
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n()) %>%
# Show percentage of each level within the categorical variable
mutate(perc = n/sum(n))
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- qnorm(0.975)*se
moe
# type your code for the Exercise here, and Knit
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year)
inference(y = response, x = as.factor(year), data = spain, statistic = "proportion", method = "theoretical", type = "ht", success = "atheist", alternative = "twosided", null = 0 )
# type your code for Question 11 here, and Knit
us <- atheism %>%
filter(nationality == "United States")
inference(y = response, data = us, x = as.factor(year), method = "theoretical", type = "ht", alternative = "twosided", null = 0, statistic = "proportion", success = "atheist")
# type your code for Question 12 here, and Knit
sig_level = 0.05
nt4 = 39
Type_1_error <- sig_level * nt4
Type_1_error
# type your code for Question 13 here, and Knit
p <- 0.5
n_sample <- z_value^2 * p*(1-p)/0.01^2
n_sample
# type your code for Question 13 here, and Knit
p <- 0.5
n_sample <- z_crit^2 * p*(1-p)/0.01^2
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
# type your code for Question 7 here, and Knit
us12 %>%
group_by(response) %>%
summarise(n = n()) %>%
# Show percentage of each level within the categorical variable
mutate(perc = n/sum(n))
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
# type your code for Question 8 here, and Knit
n <- 1002
p_hat <- 0.0499
se <- sqrt(p_hat*(1-(p_hat))/n)
moe <- qnorm(0.975)*se
moe
# type your code for the Exercise here, and Knit
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
# type your code for Question 10 here, and Knit
spain <- atheism %>%
filter(nationality == "Spain") %>%
group_by(year)
inference(y = response, x = as.factor(year), data = spain, statistic = "proportion", method = "theoretical", type = "ht", success = "atheist", alternative = "twosided", null = 0 )
# type your code for Question 11 here, and Knit
us <- atheism %>%
filter(nationality == "United States")
inference(y = response, data = us, x = as.factor(year), method = "theoretical", type = "ht", alternative = "twosided", null = 0, statistic = "proportion", success = "atheist")
# type your code for Question 12 here, and Knit
sig_level = 0.05
nt4 = 39
Type_1_error <- sig_level * nt4
Type_1_error
zcrit <- qnorm(0.975)
n_sample <- z_crit^2 * p*(1-p)/0.01^2
# type your code for Question 13 here, and Knit
p <- 0.5
z_crit <- qnorm(0.975)
n_sample <- z_crit^2 * p*(1-p)/0.01^2
n_sample
library(ggplot2)
library(dplyr)
library(statsr)
load("gss.Rdata")
View(gss)
gss %>%
ggplot(gss) + geom_mosaic(aes(x = natrac, fill = race))
ggplot(gss) + geom_mosaic(aes(x = natrac, fill = race))
ggplot(data = gss) + geom_mosaic(aes(x = natrac, fill = race))
library(vcd)
install vcd
install.packages("vcd")
library(vcd)
mosaicplot(natrac)
gss %>%
mosaicplot(natrac)
gss %>%
mosaicplot(natrac, shade = TRUE, legend = TRUE)
gss %>%
mosaicplot(natrac, shade = TRUE)
?mosaicplot
mosaicplot
conting <- gss %>%
group_by(natrac, race) %>%
summarise(n())
str(gss)
#str(gss)
conting <- gss %>%
group_by(natrace, race) %>%
summarise(n())
View(conting)
conting <- gss %>%
group_by(!is.na(natrace), race) %>%
summarise(n())
conting <- gss %>%
filter(!is.na(natrace), !is.na(race)) %>%
group_by(race, natrace) %>%
summarise(n())
mosaicplot(conting)
library(ggplot2)
library(dplyr)
library(statsr)
load("brfss2013.RData")
#checking the type of variable
str(brfss2013$wtkg3)
str(brfss2013$htin4)
str(brfss2013$joinpain)
#creating new df so that there are no 'NA' values in the varibles under consideration
brfss_joinpain <- brfss2013 %>%
filter(!is.na(joinpain),!is.na(htin4), !is.na(wtkg3)) %>%
mutate(wtkg3_actual = wtkg3/100) ##Assumption: The calculated weight variable wtkg3 divided by 100 makes sense hence added new variable wtkg3_actual
#str(brfss_joinpain$wtkg3_actual)
#converting int values of levels in 'joinpain' to factor so that they can be ordered properly in denotion
brfss_joinpain[, 'joinpain']  <- factor(brfss_joinpain[,'joinpain'])
str(brfss_joinpain$joinpain)    #%>%
#TO get an idea of summary statistics of heights
brfss_joinpain %>%
group_by(joinpain) %>%
summarise(count=n(), mean_height = mean(htin4), median_ht = median(htin4), min_ht = min(htin4), max_ht = max(htin4), iqr_ht = IQR(htin4), sd_ht = sd(htin4), var_ht = var(htin4))
#To get an idea of summary stats of weights (kg)
brfss_joinpain %>%
group_by(joinpain) %>%
summarise(count=n(), mean_wt = mean(wtkg3_actual), median_wt = median(wtkg3_actual), min_wt = min(wtkg3_actual), max_wt = max(wtkg3_actual), iqr_wt = IQR(wtkg3_actual), sd_wt = sd(wtkg3_actual), var_wt = var(wtkg3_actual))
#plot probability distributions by categorical level of the variable 'joinpain' for height
#dim(brfss_joinpain)
ggplot(brfss_joinpain, aes(x = htin4, colour = joinpain)) + geom_density() + labs(x = "height (inches)", y = "prob_density")
#plot probability distributions by categorical level of the variable 'joinpain' for weight
ggplot(brfss_joinpain, aes(x = wtkg3_actual, colour = joinpain)) + geom_density() + labs(x = "weight (kg)", y = "prob_density")
#check variable type
str(brfss2013$cvdinfr4)
str(brfss2013$cvdcrhd4)
str(brfss2013$X_state)
#_state is not allowed, so replacement is done
grep("state", names(brfss2013), value = TRUE)
# number of respondents grouped by state
statewise_count <- brfss2013 %>%
group_by(X_state) %>%
summarise(count = n())
#arrange(desc(countX_state))
#finding the descending order
statewise_count %>%
#summarise(max(count), min(count))
arrange(desc(count))
# new dataframe creation for the purpose of answering this specific question
brfss_heartattack <- brfss2013 %>%
filter(!is.na(cvdinfr4),!is.na(cvdcrhd4), X_state %in% c("Florida","Guam"))
#New variable to get percentage in the plots based on select variable
brfss_heartattack %>%
group_by(X_state, cvdinfr4, cvdcrhd4) %>%
summarise(count = n()) %>%
mutate(percentage_count = 100 * count/sum(count)) %>%
#plot coronary heart disease along x axis, cvdinfr4 in a different colour
ggplot(aes(x=cvdcrhd4, y = percentage_count, fill=cvdinfr4)) +
#plot cvdinfr4 alongside cvdcrhd4 ("dodge", alternatively use "stack") and make #a seperate graph for both values of cvdcrhd4
geom_bar(stat = "identity",position = "dodge") +
# To split across the states considered
facet_wrap(~X_state) +
# Beautify with color codes
scale_fill_manual("Condition", values = alpha( c("firebrick", "dodgerblue4"), 1) ) +
labs(x = "Ever Diagnosed With Angina Or Coronary Heart Disease", y = "percentage diagnosed with heart attack based on x-variable")
#checking variable type
str(brfss2013$misdeprd)
str(brfss2013$decide)
#data frame without NAs for the variables under consideration
brfss_dep_conc <- brfss2013 %>%
filter(!is.na(misdeprd),!is.na(decide))
#group_by(misdeprd, decide) %>%
#summarise(n())
#stacked bar plot
ggplot(brfss_dep_conc, aes(x = misdeprd)) + geom_bar(aes(fill = decide), position = 'fill') + labs(x = "How Often Feel Depressed Past 30 Days", y = "proportion of Yes/No for having diffculty concentrating")
View(brfss_dep_conc)
conting_sb <- gss %>%
filter(!is.na(natrace), !is.na(race))
ggplot(conting_sb, aes(x = race)) + geom_bar(aes(fill = natrace), position = 'fill') + labs(x = "race", y = "proportion of natrace response")
View(conting_sb)
conting
gss %>%
ct <- table(race, natrace)
library(ggplot2)
library(dplyr)
library(statsr)
library(vcd)
load("gss.Rdata")
#str(gss)
conting <- gss %>%
filter(!is.na(natrace), !is.na(race)) %>%
group_by(race, natrace) %>%
summarise(n())
conting
gss %>%
ct <- table(race, natrace)
gss %>%
ct <- table(gss$race, gss$natrace)
ct <- table(gss$race, gss$natrace)
ct
mosaicplot(cont, shade = TRUE, las=2,
main = "ct")
cont <- as.table(as.matrix(ct))
mosaicplot(cont, shade = TRUE, las=2,
main = "ct")
chisq_race_natrace <- chisq.test(ct)
View(chisq_race_natrace)
View(chisq_race_natrace)
chisq_race_natrace
# observed counts in each cell
chisq_race_natrace$observed
# observed counts in each cell
chisq_race_natrace$expected
# observed counts in each cell
round(chisq_race_natrace$expected,2)
mosaicplot(cont, shade = TRUE, las=2,
main = "ct")
cont <- as.table(as.matrix(ct))
mosaicplot(cont, shade = TRUE, las=2)
cont <- as.table(as.matrix(ct))
mosaicplot(cont, shade = TRUE, las=2, main = "Mosaic Plot between Race and natrace")
cont <- as.table(as.matrix(ct))
mosaicplot(cont, shade = TRUE, las=2, main = "Mosaic Plot between race and natrace")
